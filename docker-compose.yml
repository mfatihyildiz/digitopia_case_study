version: "3.9"

services:
  # Eureka Discovery Server
  discovery-service:
    build: ./discovery-service
    container_name: digitopia-discovery
    restart: always
    ports:
      - "8761:8761"
    environment:
      SPRING_APPLICATION_NAME: discovery-service
      SERVER_PORT: 8761
      SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED: "false"
    networks:
      - digitopia-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: digitopia-gateway
    restart: always
    depends_on:
      discovery-service:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: api-gateway
      SERVER_PORT: 8080
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/
      SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED: "false"
    ports:
      - "8080:8080"
    networks:
      - digitopia-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL - User Service
  postgres-user:
    image: postgres:15
    container_name: postgres-user
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: user_db
    ports:
      - "5433:5432"
    volumes:
      - user_data:/var/lib/postgresql/data
    networks:
      - digitopia-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # User Service
  user-service:
    build: ./user-service
    container_name: digitopia-user-service
    restart: always
    depends_on:
      postgres-user:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: user-service
      SERVER_PORT: 8082
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-user:5432/user_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/
      SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED: "false"
    ports:
      - "8082:8082"
    networks:
      - digitopia-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL - Organization Service
  postgres-org:
    image: postgres:15
    container_name: postgres-org
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: organization_db
    ports:
      - "5434:5432"
    volumes:
      - org_data:/var/lib/postgresql/data
    networks:
      - digitopia-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Organization Service
  organization-service:
    build: ./organization-service
    container_name: digitopia-organization-service
    restart: always
    depends_on:
      postgres-org:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: organization-service
      SERVER_PORT: 8083
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-org:5432/organization_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/
      SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED: "false"
    ports:
      - "8083:8083"
    networks:
      - digitopia-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL - Invitation Service
  postgres-inv:
    image: postgres:15
    container_name: postgres-inv
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: invitation_db
    ports:
      - "5435:5432"
    volumes:
      - inv_data:/var/lib/postgresql/data
    networks:
      - digitopia-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Invitation Service
  invitation-service:
    build: ./invitation-service
    container_name: digitopia-invitation-service
    restart: always
    depends_on:
      postgres-inv:
        condition: service_healthy
      organization-service:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: invitation-service
      SERVER_PORT: 8084
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-inv:5432/invitation_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka/
      SERVICES_ORGANIZATION_BASE_URL: http://organization-service:8083
      SPRING_CLOUD_COMPATIBILITY_VERIFIER_ENABLED: "false"
    ports:
      - "8084:8084"
    networks:
      - digitopia-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Volumes
volumes:
  user_data:
  org_data:
  inv_data:

# Network
networks:
  digitopia-net:
    driver: bridge
